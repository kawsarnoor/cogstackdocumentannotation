{"remainingRequest":"/Users/kawsarnoor/Desktop/cogstack/annotationtool/client/node_modules/babel-loader/lib/index.js!/Users/kawsarnoor/Desktop/cogstack/annotationtool/client/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/kawsarnoor/Desktop/cogstack/annotationtool/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kawsarnoor/Desktop/cogstack/annotationtool/client/src/components/Progress.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kawsarnoor/Desktop/cogstack/annotationtool/client/src/components/Progress.vue","mtime":1607124110633},{"path":"/Users/kawsarnoor/Desktop/cogstack/annotationtool/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/annotationtool/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/annotationtool/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/annotationtool/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5pbmRleC1vZiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LnNsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMubnVtYmVyLmNvbnN0cnVjdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmluY2x1ZGVzIjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvVXNlcnMva2F3c2Fybm9vci9EZXNrdG9wL2NvZ3N0YWNrL2Fubm90YXRpb250b29sL2NsaWVudC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vdG9Db25zdW1hYmxlQXJyYXkiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwoKLyplc2xpbnQtZGlzYWJsZSovCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCB7IEV2ZW50QnVzIH0gZnJvbSAiLi4vbWFpbi5qcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnUHJvZ2VzcycsCiAgcHJvcHM6IHsKICAgIG51bWJlcnM6IE51bWJlcgogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHByb2plY3RpZDogTnVtYmVyLAogICAgICBjdXJyZW50aWR4OiBOdW1iZXIsCiAgICAgIGRvY3VtZW50X2lkczogW10sCiAgICAgIGNvbXBsZXRlZF9pZHM6IFtdLAogICAgICB2aWV3YWJsZV9kb2N1bWVudHM6IFtdLAogICAgICBkb2N1bWVudHNfcGVyX3BhZ2U6IE51bWJlciwKICAgICAgcGFnZU51bWJlcjogTnVtYmVyLAogICAgICByb290X2FwaTogcHJvY2Vzcy5lbnYuVlVFX0FQUF9VUkwKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBuZXh0UGFnZTogZnVuY3Rpb24gbmV4dFBhZ2UoKSB7CiAgICAgIGNvbnNvbGUubG9nKCdnZXR0aW5nIG5leHQgcGFnZScpOwogICAgICB0aGlzLnBhZ2VOdW1iZXIgPSB0aGlzLnBhZ2VOdW1iZXIgKyAxOwogICAgICB2YXIgdG9wX2RvYyA9IHRoaXMucGFnZU51bWJlciAqIHRoaXMuZG9jdW1lbnRzX3Blcl9wYWdlOwogICAgICB2YXIgYm90dG9tX2RvYyA9IHRvcF9kb2MgKyB0aGlzLmRvY3VtZW50c19wZXJfcGFnZTsKCiAgICAgIGlmICh0aGlzLmRvY3VtZW50X2lkcy5pbmNsdWRlcyh0b3BfZG9jICsgMSkpIHsKICAgICAgICB0aGlzLnZpZXdhYmxlX2RvY3VtZW50cyA9IHRoaXMuZG9jdW1lbnRfaWRzLnNsaWNlKHRvcF9kb2MsIGJvdHRvbV9kb2MpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMucGFnZU51bWJlciA9IHRoaXMucGFnZU51bWJlciAtIDE7CiAgICAgIH0KICAgIH0sCiAgICBwcmV2aW91c1BhZ2U6IGZ1bmN0aW9uIHByZXZpb3VzUGFnZSgpIHsKICAgICAgY29uc29sZS5sb2coJ2dldHRpbmcgcHJldmlvdXMgcGFnZScpOwoKICAgICAgaWYgKHRoaXMucGFnZU51bWJlciA8IDEpIHsKICAgICAgICByZXR1cm47CiAgICAgIH0KCiAgICAgIHRoaXMucGFnZU51bWJlciA9IHRoaXMucGFnZU51bWJlciAtIDE7CiAgICAgIHZhciB0b3BfZG9jID0gdGhpcy5wYWdlTnVtYmVyICogdGhpcy5kb2N1bWVudHNfcGVyX3BhZ2U7CiAgICAgIHZhciBib3R0b21fZG9jID0gdG9wX2RvYyArIHRoaXMuZG9jdW1lbnRzX3Blcl9wYWdlOwogICAgICB0aGlzLnZpZXdhYmxlX2RvY3VtZW50cyA9IHRoaXMuZG9jdW1lbnRfaWRzLnNsaWNlKHRvcF9kb2MsIGJvdHRvbV9kb2MpOwogICAgfSwKICAgIGdvVG9DdXJyZW50SW5kZXhQYWdlOiBmdW5jdGlvbiBnb1RvQ3VycmVudEluZGV4UGFnZSgpIHsKICAgICAgdmFyIGxhc3REb2N1bWVudCA9IE1hdGgubWF4LmFwcGx5KE1hdGgsIF90b0NvbnN1bWFibGVBcnJheSh0aGlzLmNvbXBsZXRlZF9pZHMpKTsKICAgICAgdmFyIHBvcyA9IHRoaXMuZG9jdW1lbnRfaWRzLmluZGV4T2YobGFzdERvY3VtZW50KTsKICAgICAgdGhpcy5wYWdlTnVtYmVyID0gTWF0aC5mbG9vcihwb3MgLyB0aGlzLmRvY3VtZW50c19wZXJfcGFnZSk7CiAgICAgIHZhciB0b3BfZG9jID0gdGhpcy5wYWdlTnVtYmVyICogdGhpcy5kb2N1bWVudHNfcGVyX3BhZ2U7CiAgICAgIHZhciBib3R0b21fZG9jID0gdG9wX2RvYyArIHRoaXMuZG9jdW1lbnRzX3Blcl9wYWdlOwogICAgICB0aGlzLmN1cnJlbnRpZHggPSBsYXN0RG9jdW1lbnQ7CiAgICAgIHRoaXMudmlld2FibGVfZG9jdW1lbnRzID0gdGhpcy5kb2N1bWVudF9pZHMuc2xpY2UodG9wX2RvYywgYm90dG9tX2RvYyk7CiAgICAgIGNvbnNvbGUubG9nKCdjb21wbGV0ZWRwYWdlJyk7CiAgICB9LAogICAgbmV4dDogZnVuY3Rpb24gbmV4dCgpIHsKICAgICAgaWYgKHRoaXMuY3VycmVudGlkeCA8IHRoaXMuZG9jdW1lbnRfaWRzLmxlbmd0aCkgewogICAgICAgIHRoaXMuY3VycmVudGlkeCA9IHRoaXMuY3VycmVudGlkeCArIDE7CiAgICAgICAgY29uc29sZS5sb2coJ2dvaW5nIGZvcndhcmQgdG8gZG9jdW1lbnQgJywgdGhpcy5jdXJyZW50aWR4KTsKICAgICAgICBFdmVudEJ1cy4kZW1pdCgibnVtYmVyLWFkZGVkIiwgdGhpcy5jdXJyZW50aWR4KTsKCiAgICAgICAgaWYgKHRoaXMuY3VycmVudGlkeCA+IE1hdGgubWF4LmFwcGx5KE1hdGgsIF90b0NvbnN1bWFibGVBcnJheSh0aGlzLnZpZXdhYmxlX2RvY3VtZW50cykpKSB7CiAgICAgICAgICB0aGlzLm5leHRQYWdlKCk7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIGNvbnNvbGUubG9nKCdFbmQgb2YgZGF0YXNldCcpOwogICAgICB9CiAgICB9LAogICAgcHJldjogZnVuY3Rpb24gcHJldigpIHsKICAgICAgaWYgKHRoaXMuY3VycmVudGlkeCA+IDEpIHsKICAgICAgICB0aGlzLmN1cnJlbnRpZHggPSB0aGlzLmN1cnJlbnRpZHggLSAxOwogICAgICAgIGNvbnNvbGUubG9nKCdnb2luZyBiYWNrIHRvIGRvY3VtZW50ICcsIHRoaXMuY3VycmVudGlkeCk7CiAgICAgICAgRXZlbnRCdXMuJGVtaXQoIm51bWJlci1hZGRlZCIsIHRoaXMuY3VycmVudGlkeCk7CgogICAgICAgIGlmICh0aGlzLmN1cnJlbnRpZHggPCBNYXRoLm1pbi5hcHBseShNYXRoLCBfdG9Db25zdW1hYmxlQXJyYXkodGhpcy52aWV3YWJsZV9kb2N1bWVudHMpKSkgewogICAgICAgICAgdGhpcy5wcmV2aW91c1BhZ2UoKTsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgY29uc29sZS5sb2coJ1N0YXJ0IG9mIGRhdGFzZXQnKTsKICAgICAgfQogICAgfSwKICAgIGdvVG9Eb2N1bWVudDogZnVuY3Rpb24gZ29Ub0RvY3VtZW50KGkpIHsKICAgICAgdGhpcy5jdXJyZW50aWR4ID0gaTsKICAgICAgRXZlbnRCdXMuJGVtaXQoIm51bWJlci1hZGRlZCIsIGkpOwogICAgfQogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgLy8gUmVmcmVzaCBwYWdlIGF0IHN0YXJ0IG9mIGNvbXBvbmVudCBjcmVhdGlvbi4gSXMgdGhlcmUgYSBtb3JlIFZ1ZS1pc2ggd2F5IG9mIGRvaW5nIHRoaXM/CiAgICBpZiAobG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2ZvcmNlUmVmcmVzaCcpID09PSAncmVmcmVzaCcpIHsKICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2ZvcmNlUmVmcmVzaCcsICcnKTsKICAgICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpOwogICAgfQoKICAgIHRoaXMucHJvamVjdGlkID0gMTsKICAgIHRoaXMuY3VycmVudGlkeCA9IDE7IC8vIHJldHJpZXZlIHVzaW5nIGFwaQoKICAgIHRoaXMucGFnZU51bWJlciA9IC0xOwogICAgdGhpcy5kb2N1bWVudHNfcGVyX3BhZ2UgPSAxMDsKICAgIGNvbnNvbGUubG9nKCdQcm9ncmVzc3MgbG9hZGVkIHdpdGggY2lkOiAnLCB0aGlzLmN1cnJlbnRpZHgpOwogICAgdmFyIHBhdGggPSAnaHR0cDovLycgKyB0aGlzLnJvb3RfYXBpICsgJzo1MDAxL2dldENvbXBsZXRlZCc7CiAgICBheGlvcy5wb3N0KHBhdGgsIHsKICAgICAgJ3Byb2plY3RfaWQnOiB0aGlzLnByb2plY3RpZAogICAgfSwgewogICAgICBoZWFkZXJzOiB7CiAgICAgICAgJ0F1dGhvcml6YXRpb24nOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnand0JykKICAgICAgfQogICAgfSkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgIF90aGlzLmRvY3VtZW50X2lkcyA9IHJlcy5kYXRhLmRvY3VtZW50X2lkczsKICAgICAgX3RoaXMuY29tcGxldGVkX2lkcyA9IHJlcy5kYXRhLmNvbXBsZXRlZF9pZHM7IC8vIGxvYWQgaW4gZmlyc3QgeCBkb2N1bWVudHMKCiAgICAgIF90aGlzLm5leHRQYWdlKCk7CiAgICB9KS5jYXRjaChmdW5jdGlvbiAoZXJyb3IpIHsKICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICB9KTsgLy8gRXZlbnQgbGlzdGVuZXIgZm9yIHByZXZpb3VzIGFuZCBuZXh0IGRvY3VtZW50CgogICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBmdW5jdGlvbiAoZSkgewogICAgICBpZiAoZS5rZXkgPT0gJ0Fycm93TGVmdCcpIHsKICAgICAgICBfdGhpcy5wcmV2KCk7CiAgICAgIH0KCiAgICAgIGlmIChlLmtleSA9PSAnQXJyb3dSaWdodCcpIHsKICAgICAgICBfdGhpcy5uZXh0KCk7CiAgICAgIH0KICAgIH0pOwogICAgRXZlbnRCdXMuJG9uKCJsYWJlbC1hZGRlZCIsIGZ1bmN0aW9uIChpZHgpIHsKICAgICAgY29uc29sZS5sb2coJ2xhYmVsLWFkZGVkOiAnLCBpZHgpOwoKICAgICAgaWYgKCFfdGhpcy5jb21wbGV0ZWRfaWRzLmluY2x1ZGVzKGlkeCkpIHsKICAgICAgICB2YXIgX3BhdGggPSAnaHR0cDovLycgKyBfdGhpcy5yb290X2FwaSArICc6NTAwMS9nZXRDb21wbGV0ZWQnOwoKICAgICAgICBheGlvcy5wb3N0KF9wYXRoLCB7CiAgICAgICAgICAncHJvamVjdF9pZCc6IF90aGlzLnByb2plY3RpZAogICAgICAgIH0sIHsKICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgJ0F1dGhvcml6YXRpb24nOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnand0JykKICAgICAgICAgIH0KICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXMpIHsKICAgICAgICAgIF90aGlzLmRvY3VtZW50X2lkcyA9IHJlcy5kYXRhLmRvY3VtZW50X2lkczsKICAgICAgICAgIF90aGlzLmNvbXBsZXRlZF9pZHMgPSByZXMuZGF0YS5jb21wbGV0ZWRfaWRzOwogICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICAgICAgfSk7CiAgICAgIH0KCiAgICAgIF90aGlzLm5leHQoKTsKICAgIH0pOwogIH0KfTs="},{"version":3,"sources":["Progress.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<!-- eslint-disable -->\n    <div class=\"container\" id=\"progress\">\n        <!-- <img alt=\"Vue logo\" src=\"../assets/uclh.png\" style=\"max-width: 60%\"> -->\n        <div class=\"card text-center\" style=\"display: inline-block;\">\n            <div class=\"card-header\">\n                <div class=\"column is-two-thirds\">Finished {{ completed_ids.length}} of {{ document_ids.length}} </div>\n                <span class=\"column\" @click=\"goToCurrentIndexPage()\"><a><i class=\"fa fa-bookmark fa-1x\"></i></a></span>\n            </div>\n            <div class=\"list-group list-group-flush\">\n                <template v-for=\"(docindx, idx) in viewable_documents\">\n                    <div class=\"btn-group\" :key=\"docindx\" role=\"group\" aria-label=\"Basic example\">\n                        <div class=\"input-group-prepend\">\n                            <div class=\"input-group-text\" id=\"btnGroupAddon\">{{ docindx }}</div>\n                        </div>\n                        <button v-if=\"docindx==currentidx\" :key=\"docindx\"  type=\"button\" class=\"list-group-item list-group-item-action active\" @click=\"goToDocument(docindx)\"><span v-if=\"completed_ids.includes(docindx)\"  style='font-size:15px;'>&#10004;</span> Doc {{ docindx }}</button>\n                        <button v-else type=\"button\" :key=\"docindx\"  class=\"list-group-item list-group-item-action\" @click=\"goToDocument(docindx)\"><span v-if=\"completed_ids.includes(docindx)\"  style='font-size:15px;'>&#10004;</span> Doc {{ docindx }}</button>\n                    </div>\n                </template>\n            </div>\n        </div>\n        <div>\n            <button class=\"btn btn-primary\" type=\"button\" style=\"margin-right: 15px; margin-top: 10px;\" @click=\"previousPage()\">Prev</button>\n            <button class=\"btn btn-primary\" type=\"button\" style=\"margin-left: 15px; margin-top: 10px;\" @click=\"nextPage()\">Next</button>\n        </div>\n    </div>\n</template>\n\n<script>\n/*eslint-disable*/\nimport axios from 'axios';\nimport { EventBus } from \"../main.js\";\n\nexport default {\n  name: 'Progess',\n  props: {\n    numbers: Number,\n  },\n  data() {\n      return {\n        projectid: Number,\n        currentidx: Number,\n        document_ids: [],\n        completed_ids: [],\n        viewable_documents: [],\n        documents_per_page: Number,\n        pageNumber: Number,\n        root_api: process.env.VUE_APP_URL,\n      };\n  },\n  methods: {\n\n    nextPage() {\n           console.log('getting next page')\n\n           this.pageNumber = this.pageNumber + 1\n           var top_doc = (this.pageNumber) * this.documents_per_page;\n           var bottom_doc = top_doc + this.documents_per_page;\n           \n           if (this.document_ids.includes(top_doc+1)) {\n                this.viewable_documents = this.document_ids.slice(top_doc, bottom_doc)\n           } else {\n               this.pageNumber = this.pageNumber - 1\n           }\n    },\n    \n    previousPage() {\n\n        console.log('getting previous page')\n        if (this.pageNumber < 1) {\n            return;\n        }\n        this.pageNumber = this.pageNumber - 1\n        var top_doc = (this.pageNumber) * this.documents_per_page\n        var bottom_doc = top_doc + this.documents_per_page\n        this.viewable_documents = this.document_ids.slice(top_doc, bottom_doc)\n\n    },\n\n    goToCurrentIndexPage() {\n\n        var lastDocument = Math.max(...this.completed_ids)\n        var pos = (this.document_ids).indexOf(lastDocument)\n        \n        this.pageNumber = Math.floor(pos/this.documents_per_page);\n        var top_doc = (this.pageNumber) * this.documents_per_page\n        var bottom_doc = top_doc + this.documents_per_page\n\n        this.currentidx = lastDocument\n        this.viewable_documents = this.document_ids.slice(top_doc, bottom_doc)\n        console.log('completedpage')\n    },\n\n    next() {\n            if (this.currentidx < this.document_ids.length) {\n                this.currentidx = this.currentidx + 1;\n                console.log('going forward to document ', this.currentidx);\n                EventBus.$emit(\"number-added\", this.currentidx); \n\n                if (this.currentidx > Math.max(...this.viewable_documents)){\n                    this.nextPage()\n                }\n\n            }\n            else {\n                console.log('End of dataset');\n            }\n    },\n\n    prev() {\n            if (this.currentidx > 1) {\n                this.currentidx = this.currentidx - 1;\n                console.log('going back to document ', this.currentidx);\n                EventBus.$emit(\"number-added\", this.currentidx); \n\n                if (this.currentidx < Math.min(...this.viewable_documents)){\n                    this.previousPage()\n                }\n            }\n            else {\n                console.log('Start of dataset');\n            }\n    },\n\n    goToDocument(i) {\n        this.currentidx = i;\n        EventBus.$emit(\"number-added\", i);\n    }\n\n  },\n\n  created() {\n    \n    // Refresh page at start of component creation. Is there a more Vue-ish way of doing this?\n    if (localStorage.getItem('forceRefresh') === 'refresh') {\n        localStorage.setItem('forceRefresh', '');\n        window.location.reload();\n    }\n\n    this.projectid = 1;\n    this.currentidx = 1; // retrieve using api\n    this.pageNumber = -1;\n    this.documents_per_page = 10\n\n    console.log('Progresss loaded with cid: ', this.currentidx);\n\n    const path = 'http://' + this.root_api + ':5001/getCompleted';\n    axios.post(path, {'project_id': this.projectid}, {headers: {'Authorization': localStorage.getItem('jwt')}})\n    .then((res) => {\n        this.document_ids = res.data.document_ids;\n        this.completed_ids = res.data.completed_ids;\n        \n        // load in first x documents\n        this.nextPage();\n\n    })\n    .catch((error) => {\n        console.error(error);\n    });\n\n    // Event listener for previous and next document\n    window.addEventListener('keydown', (e) => {\n      if (e.key == 'ArrowLeft') {\n        this.prev();\n      }\n      if (e.key == 'ArrowRight') {\n        this.next();\n      }\n    });\n\n    EventBus.$on(\"label-added\", idx => {\n      console.log('label-added: ',idx);\n      if (!this.completed_ids.includes(idx)) {\n            const path = 'http://' + this.root_api + ':5001/getCompleted';\n            axios.post(path, {'project_id': this.projectid}, {headers: {'Authorization': localStorage.getItem('jwt')}})\n            .then((res) => {\n                this.document_ids = res.data.document_ids;\n                this.completed_ids = res.data.completed_ids;\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n      }\n      this.next();\n    });\n\n  }\n\n  \n};\n</script>\n\n<style scoped>\n\n#progress{\n    background-color: white;\n    padding: 0px 0px;\n}\n.overflowAuto {\n  overflow-x: hidden;\n  overflow-y: auto;\n  height: calc(100vh - 600px);\n}\n\n.list-group{\n    max-height: 500px;\n    margin-bottom: 10px;\n    overflow:scroll;\n    -webkit-overflow-scrolling: touch;\n}\n\n\n</style>\n"],"sourceRoot":"src/components"}]}
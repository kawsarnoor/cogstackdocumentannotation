{"remainingRequest":"/Users/kawsarnoor/Desktop/cogstack/annotationtool/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kawsarnoor/Desktop/cogstack/annotationtool/client/src/components/Progress.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/kawsarnoor/Desktop/cogstack/annotationtool/client/src/components/Progress.vue","mtime":1613428061667},{"path":"/Users/kawsarnoor/Desktop/cogstack/annotationtool/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/annotationtool/client/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/annotationtool/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/annotationtool/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCi8qZXNsaW50LWRpc2FibGUqLwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgeyBFdmVudEJ1cyB9IGZyb20gIi4uL21haW4uanMiOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdQcm9nZXNzJywKICBwcm9wczogewogICAgbnVtYmVyczogTnVtYmVyLAogICAgcHJvamVjdGlkOiBOdW1iZXIsCiAgfSwKCiAgZGF0YSgpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICBwcm9qZWN0aWQ6IE51bWJlciwKICAgICAgICBubHB0YXNrdHlwZTogJycsCiAgICAgICAgY3VycmVudGlkeDogTnVtYmVyLAogICAgICAgIGRvY3VtZW50X2lkczogW10sCiAgICAgICAgY29tcGxldGVkX2lkczogW10sCiAgICAgICAgdmlld2FibGVfZG9jdW1lbnRzOiBbXSwKICAgICAgICBkb2N1bWVudHNfcGVyX3BhZ2U6IE51bWJlciwKICAgICAgICBwYWdlTnVtYmVyOiBOdW1iZXIsCiAgICAgICAgcm9vdF9hcGk6IHByb2Nlc3MuZW52LlZVRV9BUFBfVVJMLAogICAgICB9OwogIH0sCiAgbWV0aG9kczogewoKICAgIG5leHRQYWdlKCkgewogICAgICAgICAgIGNvbnNvbGUubG9nKCdnZXR0aW5nIG5leHQgcGFnZScpCgogICAgICAgICAgIHRoaXMucGFnZU51bWJlciA9IHRoaXMucGFnZU51bWJlciArIDEKICAgICAgICAgICB2YXIgdG9wX2RvYyA9ICh0aGlzLnBhZ2VOdW1iZXIpICogdGhpcy5kb2N1bWVudHNfcGVyX3BhZ2U7CiAgICAgICAgICAgdmFyIGJvdHRvbV9kb2MgPSB0b3BfZG9jICsgdGhpcy5kb2N1bWVudHNfcGVyX3BhZ2U7CiAgICAgICAgICAgCiAgICAgICAgICAgaWYodGhpcy5kb2N1bWVudF9pZHMubGVuZ3RoID4gdG9wX2RvYyAtIDEpIHsKICAgICAgICAgICAgICAgIHRoaXMudmlld2FibGVfZG9jdW1lbnRzID0gdGhpcy5kb2N1bWVudF9pZHMuc2xpY2UodG9wX2RvYywgYm90dG9tX2RvYykKCiAgICAgICAgLy8gICAgaWYgKHRoaXMuZG9jdW1lbnRfaWRzLmluY2x1ZGVzKHRvcF9kb2MrMSkpIHsKICAgICAgICAvLyAgICAgICAgIHRoaXMudmlld2FibGVfZG9jdW1lbnRzID0gdGhpcy5kb2N1bWVudF9pZHMuc2xpY2UodG9wX2RvYywgYm90dG9tX2RvYykKICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICB0aGlzLnBhZ2VOdW1iZXIgPSB0aGlzLnBhZ2VOdW1iZXIgLSAxIC8vIHN0YXkgb24gdGhlIHNhbWUgcGFnZQogICAgICAgICAgIH0KICAgIH0sCiAgICAKICAgIHByZXZpb3VzUGFnZSgpIHsKCiAgICAgICAgY29uc29sZS5sb2coJ2dldHRpbmcgcHJldmlvdXMgcGFnZScpCiAgICAgICAgaWYgKHRoaXMucGFnZU51bWJlciA8IDEpIHsKICAgICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KICAgICAgICB0aGlzLnBhZ2VOdW1iZXIgPSB0aGlzLnBhZ2VOdW1iZXIgLSAxCiAgICAgICAgdmFyIHRvcF9kb2MgPSAodGhpcy5wYWdlTnVtYmVyKSAqIHRoaXMuZG9jdW1lbnRzX3Blcl9wYWdlCiAgICAgICAgdmFyIGJvdHRvbV9kb2MgPSB0b3BfZG9jICsgdGhpcy5kb2N1bWVudHNfcGVyX3BhZ2UKICAgICAgICB0aGlzLnZpZXdhYmxlX2RvY3VtZW50cyA9IHRoaXMuZG9jdW1lbnRfaWRzLnNsaWNlKHRvcF9kb2MsIGJvdHRvbV9kb2MpCgogICAgfSwKCiAgICBnb1RvQ3VycmVudEluZGV4UGFnZSgpIHsKCiAgICAgICAgdmFyIGxhc3REb2N1bWVudCA9IE1hdGgubWF4KC4uLnRoaXMuY29tcGxldGVkX2lkcykKICAgICAgICB2YXIgcG9zID0gKHRoaXMuZG9jdW1lbnRfaWRzKS5pbmRleE9mKGxhc3REb2N1bWVudCkKICAgICAgICAKICAgICAgICB0aGlzLnBhZ2VOdW1iZXIgPSBNYXRoLmZsb29yKHBvcy90aGlzLmRvY3VtZW50c19wZXJfcGFnZSk7CiAgICAgICAgdmFyIHRvcF9kb2MgPSAodGhpcy5wYWdlTnVtYmVyKSAqIHRoaXMuZG9jdW1lbnRzX3Blcl9wYWdlCiAgICAgICAgdmFyIGJvdHRvbV9kb2MgPSB0b3BfZG9jICsgdGhpcy5kb2N1bWVudHNfcGVyX3BhZ2UKCiAgICAgICAgdGhpcy5jdXJyZW50aWR4ID0gbGFzdERvY3VtZW50CiAgICAgICAgdGhpcy52aWV3YWJsZV9kb2N1bWVudHMgPSB0aGlzLmRvY3VtZW50X2lkcy5zbGljZSh0b3BfZG9jLCBib3R0b21fZG9jKQogICAgfSwKCiAgICBuZXh0KCkgewogICAgICAgICAgICBpZiAodGhpcy5jdXJyZW50aWR4IDwgIHRoaXMuZG9jdW1lbnRfaWRzW3RoaXMuZG9jdW1lbnRfaWRzLmxlbmd0aCAtIDFdICkgewogICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50aWR4ID0gdGhpcy5jdXJyZW50aWR4ICsgMTsKICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCdnb2luZyBmb3J3YXJkIHRvIGRvY3VtZW50ICcsIHRoaXMuY3VycmVudGlkeCk7CiAgICAgICAgICAgICAgICBFdmVudEJ1cy4kZW1pdCgibnVtYmVyLWFkZGVkIiwgdGhpcy5jdXJyZW50aWR4KTsgCgogICAgICAgICAgICAgICAgaWYgKHRoaXMuY3VycmVudGlkeCA+IE1hdGgubWF4KC4uLnRoaXMudmlld2FibGVfZG9jdW1lbnRzKSl7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5uZXh0UGFnZSgpCiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICB9CiAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0VuZCBvZiBkYXRhc2V0Jyk7CiAgICAgICAgICAgIH0KICAgIH0sCgogICAgcHJldigpIHsKICAgICAgICAgICAgaWYgKHRoaXMuY3VycmVudGlkeCA+IHRoaXMuZG9jdW1lbnRfaWRzWzBdKSB7CiAgICAgICAgICAgICAgICB0aGlzLmN1cnJlbnRpZHggPSB0aGlzLmN1cnJlbnRpZHggLSAxOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2dvaW5nIGJhY2sgdG8gZG9jdW1lbnQgJywgdGhpcy5jdXJyZW50aWR4KTsKICAgICAgICAgICAgICAgIEV2ZW50QnVzLiRlbWl0KCJudW1iZXItYWRkZWQiLCB0aGlzLmN1cnJlbnRpZHgpOyAKCiAgICAgICAgICAgICAgICBpZiAodGhpcy5jdXJyZW50aWR4IDwgTWF0aC5taW4oLi4udGhpcy52aWV3YWJsZV9kb2N1bWVudHMpKXsKICAgICAgICAgICAgICAgICAgICB0aGlzLnByZXZpb3VzUGFnZSgpCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZWxzZSB7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnU3RhcnQgb2YgZGF0YXNldCcpOwogICAgICAgICAgICB9CiAgICB9LAoKICAgIGdvVG9Eb2N1bWVudChpKSB7CiAgICAgICAgdGhpcy5jdXJyZW50aWR4ID0gaTsKICAgICAgICBFdmVudEJ1cy4kZW1pdCgibnVtYmVyLWFkZGVkIiwgaSk7CiAgICB9CgogIH0sCgogIGNyZWF0ZWQoKSB7CiAgICAKICAgIC8vIFJlZnJlc2ggcGFnZSBhdCBzdGFydCBvZiBjb21wb25lbnQgY3JlYXRpb24uIElzIHRoZXJlIGEgbW9yZSBWdWUtaXNoIHdheSBvZiBkb2luZyB0aGlzPwogICAgaWYgKGxvY2FsU3RvcmFnZS5nZXRJdGVtKCdmb3JjZVJlZnJlc2gnKSA9PT0gJ3JlZnJlc2gnKSB7CiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oJ2ZvcmNlUmVmcmVzaCcsICcnKTsKICAgICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7CiAgICB9CgogICAgdGhpcy5jdXJyZW50aWR4ID0gMTsgLy8gcmV0cmlldmUgdXNpbmcgYXBpCiAgICB0aGlzLnBhZ2VOdW1iZXIgPSAtMTsKICAgIHRoaXMuZG9jdW1lbnRzX3Blcl9wYWdlID0gMTAKCiAgICBjb25zb2xlLmxvZygnUHJvZ3Jlc3NzIGxvYWRlZCB3aXRoIGNpZDogJywgdGhpcy5jdXJyZW50aWR4KTsKCiAgICBjb25zdCBwYXRoID0gJ2h0dHA6Ly8nICsgdGhpcy5yb290X2FwaSArICc6NTAwMS9nZXRDb21wbGV0ZWQnOwogICAgYXhpb3MucG9zdChwYXRoLCB7J3Byb2plY3RfaWQnOiB0aGlzLnByb2plY3RpZH0sIHtoZWFkZXJzOiB7J0F1dGhvcml6YXRpb24nOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgnand0Jyl9fSkKICAgICAgICAudGhlbigocmVzKSA9PiB7CiAgICAgICAgICAgIHRoaXMuZG9jdW1lbnRfaWRzID0gcmVzLmRhdGEuZG9jdW1lbnRfaWRzOwogICAgICAgICAgICB0aGlzLmNvbXBsZXRlZF9pZHMgPSByZXMuZGF0YS5jb21wbGV0ZWRfaWRzOwogICAgICAgICAgICB0aGlzLm5scHRhc2t0eXBlID0gcmVzLmRhdGEubmxwdGFza3R5cGU7CiAgICAgICAgICAgIHRoaXMuY3VycmVudGlkeCA9IHRoaXMuZG9jdW1lbnRfaWRzWzBdOwoKICAgICAgICAgICAgLy8gbG9hZCBpbiBmaXJzdCB4IGRvY3VtZW50cwogICAgICAgICAgICB0aGlzLm5leHRQYWdlKCk7CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiB7CiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpOwogICAgfSk7CgogICAgLy8gRXZlbnQgbGlzdGVuZXIgZm9yIHByZXZpb3VzIGFuZCBuZXh0IGRvY3VtZW50CiAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIChlKSA9PiB7CiAgICAgIGlmIChlLmtleSA9PSAnQXJyb3dMZWZ0JykgewogICAgICAgIHRoaXMucHJldigpOwogICAgICB9CiAgICAgIGlmIChlLmtleSA9PSAnQXJyb3dSaWdodCcpIHsKICAgICAgICB0aGlzLm5leHQoKTsKICAgICAgfQogICAgfSk7CgogICAgRXZlbnRCdXMuJG9uKCJsYWJlbC1hZGRlZCIsIGlkeCA9PiB7CiAgICAgIGNvbnNvbGUubG9nKCdsYWJlbC1hZGRlZDogJyxpZHgpOwogICAgICBpZiAoIXRoaXMuY29tcGxldGVkX2lkcy5pbmNsdWRlcyhpZHgpKSB7CiAgICAgICAgICAgIGNvbnN0IHBhdGggPSAnaHR0cDovLycgKyB0aGlzLnJvb3RfYXBpICsgJzo1MDAxL2dldENvbXBsZXRlZCc7CiAgICAgICAgICAgIGF4aW9zLnBvc3QocGF0aCwgeydwcm9qZWN0X2lkJzogdGhpcy5wcm9qZWN0aWR9LCB7aGVhZGVyczogeydBdXRob3JpemF0aW9uJzogbG9jYWxTdG9yYWdlLmdldEl0ZW0oJ2p3dCcpfX0pCiAgICAgICAgICAgIC50aGVuKChyZXMpID0+IHsKICAgICAgICAgICAgICAgIHRoaXMuZG9jdW1lbnRfaWRzID0gcmVzLmRhdGEuZG9jdW1lbnRfaWRzOwogICAgICAgICAgICAgICAgdGhpcy5jb21wbGV0ZWRfaWRzID0gcmVzLmRhdGEuY29tcGxldGVkX2lkczsKICAgICAgICAgICAgfSkKICAgICAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gewogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7CiAgICAgICAgICAgIH0pOwogICAgICB9CiAgICAgIC8vIFRoaXMgaXMgdGhlIGNvZGUgdGhhdCB3ZSB1c2UgdG8gYXV0b21hdGljYWxseSBtb3ZlIHRvIG5leHQgZG9jdW1lbnQuIFVzZWZ1bCBvbmx5IGZvciBtdWx0aWNsYXNzCiAgICAgIGlmICh0aGlzLm5scHRhc2t0eXBlID09ICdtdWx0aWNsYXNzJyl7CiAgICAgICAgdGhpcy5uZXh0KCk7CiAgICAgIH0KICAgIH0pOwoKICB9CgogIAp9Owo="},{"version":3,"sources":["Progress.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6BA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;AAGA","file":"Progress.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<!-- eslint-disable -->\n    <div class=\"container\" id=\"progress\">\n        <!-- <img alt=\"Vue logo\" src=\"../assets/uclh.png\" style=\"max-width: 60%\"> -->\n        <div class=\"card text-center\" style=\"display: inline-block;\">\n            <div class=\"card-header\">\n                <div class=\"column is-two-thirds\">Finished {{ completed_ids.length}} of {{ document_ids.length}} </div>\n                <span class=\"column\" @click=\"goToCurrentIndexPage()\"><a><i class=\"fa fa-bookmark fa-1x\"></i></a></span>\n            </div>\n            <div class=\"list-group list-group-flush\">\n                <template v-for=\"(docindx, idx) in viewable_documents\">\n                    <div class=\"btn-group\" :key=\"docindx\" role=\"group\" aria-label=\"Basic example\">\n                        <div class=\"input-group-prepend\">\n                            <div class=\"input-group-text\" id=\"btnGroupAddon\">{{ docindx }}</div>\n                        </div>\n                        <button v-if=\"docindx==currentidx\" :key=\"docindx\"  type=\"button\" class=\"list-group-item list-group-item-action active\" @click=\"goToDocument(docindx)\"><span v-if=\"completed_ids.includes(docindx)\"  style='font-size:15px;'>&#10004;</span> Doc {{ docindx }}</button>\n                        <button v-else type=\"button\" :key=\"docindx\"  class=\"list-group-item list-group-item-action\" @click=\"goToDocument(docindx)\"><span v-if=\"completed_ids.includes(docindx)\"  style='font-size:15px;'>&#10004;</span> Doc {{ docindx }}</button>\n                    </div>\n                </template>\n            </div>\n        </div>\n        <div>\n            <button class=\"btn btn-primary\" type=\"button\" style=\"margin-right: 15px; margin-top: 10px;\" @click=\"previousPage()\">Prev</button>\n            <button class=\"btn btn-primary\" type=\"button\" style=\"margin-left: 15px; margin-top: 10px;\" @click=\"nextPage()\">Next</button>\n        </div>\n    </div>\n</template>\n\n<script>\n/*eslint-disable*/\nimport axios from 'axios';\nimport { EventBus } from \"../main.js\";\n\nexport default {\n  name: 'Progess',\n  props: {\n    numbers: Number,\n    projectid: Number,\n  },\n\n  data() {\n      return {\n        projectid: Number,\n        nlptasktype: '',\n        currentidx: Number,\n        document_ids: [],\n        completed_ids: [],\n        viewable_documents: [],\n        documents_per_page: Number,\n        pageNumber: Number,\n        root_api: process.env.VUE_APP_URL,\n      };\n  },\n  methods: {\n\n    nextPage() {\n           console.log('getting next page')\n\n           this.pageNumber = this.pageNumber + 1\n           var top_doc = (this.pageNumber) * this.documents_per_page;\n           var bottom_doc = top_doc + this.documents_per_page;\n           \n           if(this.document_ids.length > top_doc - 1) {\n                this.viewable_documents = this.document_ids.slice(top_doc, bottom_doc)\n\n        //    if (this.document_ids.includes(top_doc+1)) {\n        //         this.viewable_documents = this.document_ids.slice(top_doc, bottom_doc)\n           } else {\n               this.pageNumber = this.pageNumber - 1 // stay on the same page\n           }\n    },\n    \n    previousPage() {\n\n        console.log('getting previous page')\n        if (this.pageNumber < 1) {\n            return;\n        }\n        this.pageNumber = this.pageNumber - 1\n        var top_doc = (this.pageNumber) * this.documents_per_page\n        var bottom_doc = top_doc + this.documents_per_page\n        this.viewable_documents = this.document_ids.slice(top_doc, bottom_doc)\n\n    },\n\n    goToCurrentIndexPage() {\n\n        var lastDocument = Math.max(...this.completed_ids)\n        var pos = (this.document_ids).indexOf(lastDocument)\n        \n        this.pageNumber = Math.floor(pos/this.documents_per_page);\n        var top_doc = (this.pageNumber) * this.documents_per_page\n        var bottom_doc = top_doc + this.documents_per_page\n\n        this.currentidx = lastDocument\n        this.viewable_documents = this.document_ids.slice(top_doc, bottom_doc)\n    },\n\n    next() {\n            if (this.currentidx <  this.document_ids[this.document_ids.length - 1] ) {\n                this.currentidx = this.currentidx + 1;\n                console.log('going forward to document ', this.currentidx);\n                EventBus.$emit(\"number-added\", this.currentidx); \n\n                if (this.currentidx > Math.max(...this.viewable_documents)){\n                    this.nextPage()\n                }\n\n            }\n            else {\n                console.log('End of dataset');\n            }\n    },\n\n    prev() {\n            if (this.currentidx > this.document_ids[0]) {\n                this.currentidx = this.currentidx - 1;\n                console.log('going back to document ', this.currentidx);\n                EventBus.$emit(\"number-added\", this.currentidx); \n\n                if (this.currentidx < Math.min(...this.viewable_documents)){\n                    this.previousPage()\n                }\n            }\n            else {\n                console.log('Start of dataset');\n            }\n    },\n\n    goToDocument(i) {\n        this.currentidx = i;\n        EventBus.$emit(\"number-added\", i);\n    }\n\n  },\n\n  created() {\n    \n    // Refresh page at start of component creation. Is there a more Vue-ish way of doing this?\n    if (localStorage.getItem('forceRefresh') === 'refresh') {\n        localStorage.setItem('forceRefresh', '');\n        window.location.reload();\n    }\n\n    this.currentidx = 1; // retrieve using api\n    this.pageNumber = -1;\n    this.documents_per_page = 10\n\n    console.log('Progresss loaded with cid: ', this.currentidx);\n\n    const path = 'http://' + this.root_api + ':5001/getCompleted';\n    axios.post(path, {'project_id': this.projectid}, {headers: {'Authorization': localStorage.getItem('jwt')}})\n        .then((res) => {\n            this.document_ids = res.data.document_ids;\n            this.completed_ids = res.data.completed_ids;\n            this.nlptasktype = res.data.nlptasktype;\n            this.currentidx = this.document_ids[0];\n\n            // load in first x documents\n            this.nextPage();\n        })\n        .catch((error) => {\n            console.error(error);\n    });\n\n    // Event listener for previous and next document\n    window.addEventListener('keydown', (e) => {\n      if (e.key == 'ArrowLeft') {\n        this.prev();\n      }\n      if (e.key == 'ArrowRight') {\n        this.next();\n      }\n    });\n\n    EventBus.$on(\"label-added\", idx => {\n      console.log('label-added: ',idx);\n      if (!this.completed_ids.includes(idx)) {\n            const path = 'http://' + this.root_api + ':5001/getCompleted';\n            axios.post(path, {'project_id': this.projectid}, {headers: {'Authorization': localStorage.getItem('jwt')}})\n            .then((res) => {\n                this.document_ids = res.data.document_ids;\n                this.completed_ids = res.data.completed_ids;\n            })\n            .catch((error) => {\n                console.error(error);\n            });\n      }\n      // This is the code that we use to automatically move to next document. Useful only for multiclass\n      if (this.nlptasktype == 'multiclass'){\n        this.next();\n      }\n    });\n\n  }\n\n  \n};\n</script>\n\n<style scoped>\n\n#progress{\n    background-color: white;\n    padding: 0px 0px;\n}\n.overflowAuto {\n  overflow-x: hidden;\n  overflow-y: auto;\n  height: calc(100vh - 600px);\n}\n\n.list-group{\n    max-height: 500px;\n    margin-bottom: 10px;\n    overflow:scroll;\n    -webkit-overflow-scrolling: touch;\n}\n\n\n</style>\n"]}]}
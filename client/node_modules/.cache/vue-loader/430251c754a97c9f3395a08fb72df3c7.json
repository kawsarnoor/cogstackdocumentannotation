{"remainingRequest":"/Users/kawsarnoor/Desktop/cogstack/projects/allergies/annotationTool/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/kawsarnoor/Desktop/cogstack/projects/allergies/annotationTool/client/src/components/Document.vue?vue&type=style&index=0&id=5ffe286a&scoped=true&lang=css&","dependencies":[{"path":"/Users/kawsarnoor/Desktop/cogstack/projects/allergies/annotationTool/client/src/components/Document.vue","mtime":1591927540154},{"path":"/Users/kawsarnoor/Desktop/cogstack/projects/allergies/annotationTool/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/projects/allergies/annotationTool/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/projects/allergies/annotationTool/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/projects/allergies/annotationTool/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/kawsarnoor/Desktop/cogstack/projects/allergies/annotationTool/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKaW5wdXQgewogIG1hcmdpbjogM3B4Owp9CmgzIHsKICBtYXJnaW46IDBweCAwIDA7Cn0KdWwgewogIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTsKICBwYWRkaW5nOiAwOwp9CmxpIHsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgbWFyZ2luOiAwIDEwcHg7Cn0KYSB7CiAgY29sb3I6ICM0MmI5ODM7Cn0KLmNhdGVnb3J5IHsKICB0ZXh0LWFsaWduOiBsZWZ0OwogIG1hcmdpbi10b3A6IDE1cHg7Cn0KLm92ZXJmbG93QXV0byB7CiAgb3ZlcmZsb3cteDogaGlkZGVuOwogIG92ZXJmbG93LXk6IGF1dG87CiAgaGVpZ2h0OiBjYWxjKDEwMHZoIC0gNzAwcHgpOwp9Ci5kb2N1bWVudCB7CiAgbWFyZ2luOiAxNXB4Owp9Ci5idG4tZ3JvdXAgewogIG1hcmdpbjogNXB4Owp9CmRpdi5ib3h3cmFwIGRpdiB7CiAgZmxvYXQ6IGxlZnQ7Cn0KZGl2LmJveHdyYXAgZGl2OmhvdmVyIHsKICBiYWNrZ3JvdW5kLWNvbG9yOiBhcXVhOwogIGN1cnNvcjogcG9pbnRlcjsKfQpkaXYuYm94d3JhcCBkaXYgaDUgewogIHRleHQtYWxpZ246IGNlbnRlcjsKfQo="},{"version":3,"sources":["Document.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Document.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<!-- eslint-disable max-len -->\n  <div class=\"document\">\n    <div class=\"card text-center\">\n      <div class=\"card-header\">\n        Document {{ labels.id }}\n      </div>\n      <div class=\"card-body overflowAuto\">\n        <h5 class=\"card-title\">What Happened</h5>\n        <p class=\"card-text\">\n          <a v-for=\"(word, index) in labels.whathappened\" :key=\"index\">\n            <span v-if=\"checkSpanStatus(index)\" :id=\"'sp_' + (index)\" style=\"backgroundColor: #00FFFF;\">{{word}}</span>\n            <span v-else :id=\"'sp_' + (index)\">{{word}}</span>\n          </a>\n        </p>\n        <h5 class=\"card-title\">Actions Preventing Reoccurence</h5>\n        <p class=\"card-text\">\n          <a v-for=\"(word, index) in labels.actionspreventing\" :key=\"index\">\n            <span v-if=\"checkSpanStatus(index + labels.whathappened.length)\" :id=\"'sp_' + (index + labels.whathappened.length)\" style=\"backgroundColor: #00FFFF;\">{{word}}</span>\n            <span v-else :id=\"'sp_' + (index + labels.whathappened.length)\">{{word}}</span>\n          </a>\n        </p>\n      </div>\n    </div>\n    <div>\n      <div class=\"category\">\n        <h5>Themes</h5>\n        <div class=\"row\">\n          <div class=\"col-10\">\n            <div class=\"btn-group\" role=\"group\" v-for=\"(value, label) in labels.themes\" :key=\"label\">\n                  <button v-if=\"value == false\" class=\"btn btn-secondary\" type=\"button\" @click=\"changeValue(label, 'themes', labels.id)\">{{label}} </button>\n                  <button v-if=\"value == true\" class=\"btn btn-primary\" type=\"button\" @click=\"showSpans(label, 'themes', labels.id)\">{{label}} </button>\n                  <button v-if=\"value == true\" class=\"btn btn-warning\" type=\"button\" @click=\"changeValue(label, 'themes', labels.id)\">&#10008;</button>\n                  <button v-if=\"value == true\" class=\"btn btn-warning\" type=\"button\" @click=\"linkTexttoLabel(label, 'themes', labels.id)\">&#10078;</button>\n            </div>\n          </div>\n          <div class=\"col-2\">\n            <form class=\"form-inline\">\n              <input type=\"text\" id=\"themes-new\" class=\"form-control search\" placeholder=\"new label\" @keyup.enter=\"addlabel('themes-new')\">\n            </form>\n          </div>\n        </div>\n      </div>\n      <div class=\"category\">\n        <h5>Outcomes</h5>\n        <div class=\"row\">\n          <div class=\"col-10\">\n            <div class=\"btn-group\" role=\"group\" v-for=\"(value, label) in labels.outcomes\" :key=\"label\">\n                  <button v-if=\"value == false\" class=\"btn btn-secondary\" type=\"button\" @click=\"changeValue(label, 'outcomes', labels.id)\">{{label}} </button>\n                  <button v-if=\"value == true\" class=\"btn btn-primary\" type=\"button\" @click=\"showSpans(label, 'outcomes', labels.id)\">{{label}} </button>\n                  <button v-if=\"value == true\" class=\"btn btn-warning\" type=\"button\" @click=\"changeValue(label, 'outcomes', labels.id)\">&#10008;</button>\n                  <button v-if=\"value == true\" class=\"btn btn-warning\" type=\"button\" @click=\"linkTexttoLabel(label, 'outcomes', labels.id)\">&#10078;</button>\n            </div>\n          </div>\n          <div class=\"col-2\">\n            <form class=\"form-inline\">\n              <input type=\"text\" id=\"outcomes-new\" class=\"form-control search\" placeholder=\"new label\" @keyup.enter=\"addlabel('outcomes-new')\">\n            </form>\n          </div>\n        </div>\n      </div>\n      <div class=\"category\">\n        <h5>Barriers</h5>\n        <div class=\"row\">\n          <div class=\"col-10\">\n            <div class=\"btn-group\" role=\"group\" v-for=\"(value, label) in labels.barriers\" :key=\"label\">\n                  <button v-if=\"value == false\" class=\"btn btn-secondary\" type=\"button\" @click=\"changeValue(label, 'barriers', labels.id)\">{{label}} </button>\n                  <button v-if=\"value == true\" class=\"btn btn-primary\" type=\"button\" @click=\"showSpans(label, 'barriers', labels.id)\">{{label}} </button>\n                  <button v-if=\"value == true\" class=\"btn btn-warning\" type=\"button\" @click=\"changeValue(label, 'barriers', labels.id)\">&#10008;</button>\n                  <button v-if=\"value == true\" class=\"btn btn-warning\" type=\"button\" @click=\"linkTexttoLabel(label, 'barriers', labels.id)\">&#10078;</button>\n            </div>\n          </div>\n          <div class=\"col-2\">\n            <form class=\"form-inline\">\n              <input type=\"text\" id=\"barriers-new\" class=\"form-control search\" placeholder=\"new label\" @keyup.enter=\"addlabel('barriers-new')\">\n            </form>\n          </div>\n        </div>\n      </div>\n      <div class=\"category\">\n        <h5>Stage of Care</h5>\n          <div class=\"row\">\n            <div class=\"col-10\">\n              <div class=\"btn-group\" role=\"group\" v-for=\"(value, label) in labels.stageofcare\" :key=\"label\">\n                  <button v-if=\"value == false\" class=\"btn btn-secondary\" type=\"button\" @click=\"changeValue(label, 'stageofcare', labels.id)\">{{label}} </button>\n                  <button v-if=\"value == true\" class=\"btn btn-primary\" type=\"button\" @click=\"showSpans(label, 'stageofcare', labels.id)\">{{label}} </button>\n                  <button v-if=\"value == true\" class=\"btn btn-warning\" type=\"button\" @click=\"changeValue(label, 'stageofcare', labels.id)\">&#10008;</button>\n                  <button v-if=\"value == true\" class=\"btn btn-warning\" type=\"button\" @click=\"linkTexttoLabel(label, 'stageofcare', labels.id)\">&#10078;</button>\n              </div>\n            </div>\n            <div class=\"col-2\">\n            <form class=\"form-inline\">\n              <input type=\"text\" id=\"stageofcare-new\" class=\"form-control search\" placeholder=\"new label\" @keyup.enter=\"addlabel('stageofcare-new')\">\n            </form>\n            </div>\n          </div>\n      </div>\n      <div class=\"category\">\n        <h5>Error</h5>\n          <div class=\"row\">\n            <div class=\"col-10\">\n              <div class=\"btn-group\" role=\"group\" v-for=\"(value, label) in labels.error\" :key=\"label\">\n                  <button v-if=\"value == false\" class=\"btn btn-secondary\" type=\"button\" @click=\"changeValue(label, 'error', labels.id)\">{{label}} </button>\n                  <button v-if=\"value == true\" class=\"btn btn-primary\" type=\"button\" @click=\"showSpans(label, 'error', labels.id)\">{{label}} </button>\n                  <button v-if=\"value == true\" class=\"btn btn-warning\" type=\"button\" @click=\"changeValue(label, 'error', labels.id)\">&#10008;</button>\n                  <button v-if=\"value == true\" class=\"btn btn-warning\" type=\"button\" @click=\"linkTexttoLabel(label, 'error', labels.id)\">&#10078;</button>\n              </div>\n            </div>\n            <div class=\"col-2\">\n            <form class=\"form-inline\">\n              <input type=\"text\" id=\"error-new\" class=\"form-control search\" placeholder=\"new label\" @keyup.enter=\"addlabel('error-new')\">\n            </form>\n            </div>\n          </div>\n      </div>\n      <div class=\"category\">\n        <h5>Known Allergy</h5>\n        <div class=\"row\">\n          <div class=\"col-10\">\n            <div class=\"btn-group\" role=\"group\" v-for=\"(value, label) in labels.knownallergy\" :key=\"label\">\n                  <button v-if=\"value == false\" class=\"btn btn-secondary\" type=\"button\" @click=\"changeValue(label, 'knownallergy', labels.id)\">{{label}} </button>\n                  <button v-if=\"value == true\" class=\"btn btn-primary\" type=\"button\" @click=\"showSpans(label, 'knownallergy', labels.id)\">{{label}} </button>\n                  <button v-if=\"value == true\" class=\"btn btn-warning\" type=\"button\" @click=\"changeValue(label, 'knownallergy', labels.id)\">&#10008;</button>\n                  <button v-if=\"value == true\" class=\"btn btn-warning\" type=\"button\" @click=\"linkTexttoLabel(label, 'knownallergy', labels.id)\">&#10078;</button>\n            </div>\n          </div>\n          <div class=\"col-2\">\n            <form class=\"form-inline\">\n              <input type=\"text\" id=\"knownallergy-new\" class=\"form-control search\" placeholder=\"new label\" @keyup.enter=\"addlabel('knownallergy-new')\">\n            </form>\n          </div>\n        </div>\n      </div>\n      <div class=\"category\">\n        <h5>Certainty / Severity of Allergy</h5>\n        <div class=\"row\">\n          <div class=\"col-10\">\n            <div class=\"btn-group\" role=\"group\" v-for=\"(value, label) in labels.certaintyallergy\" :key=\"label\">\n                  <button v-if=\"value == false\" class=\"btn btn-secondary\" type=\"button\" @click=\"changeValue(label, 'certaintyallergy', labels.id)\">{{label}} </button>\n                  <button v-if=\"value == true\" class=\"btn btn-primary\" type=\"button\" @click=\"showSpans(label, 'certaintyallergy', labels.id)\">{{label}} </button>\n                  <button v-if=\"value == true\" class=\"btn btn-warning\" type=\"button\" @click=\"changeValue(label, 'certaintyallergy', labels.id)\">&#10008;</button>\n                  <button v-if=\"value == true\" class=\"btn btn-warning\" type=\"button\" @click=\"linkTexttoLabel(label, 'certaintyallergy', labels.id)\">&#10078;</button>\n            </div>\n          </div>\n          <div class=\"col-2\">\n            <form class=\"form-inline\">\n              <input type=\"text\" id=\"certaintyallergy-new\" class=\"form-control search\" placeholder=\"new label\" @keyup.enter=\"addlabel('certaintyallergy-new')\">\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n/*eslint-disable*/\n\nimport axios from 'axios';\nimport rangy from 'rangy';\nimport $ from 'jquery';\nimport { EventBus } from \"../main.js\";\n\nexport default {\n  name: 'Document',\n  props: {\n    msg: String,\n  },\n  data() {\n    return {\n      labels: [],\n      spans: {},\n      spanvalues: [],\n      numbers: [1, 2, 3],\n      currentidx: Number,\n      root_api: process.env.VUE_APP_URL,\n    };\n  },\n  methods: {\n    getnextdocument(newIdx) {\n      const path = 'http://' + this.root_api + ':5001/getDocumentviaIndex';\n      axios.post(path, {newIdx})\n        .then((res) => {\n          console.log(res.data.labels);\n          this.labels = res.data.labels;\n          this.spans = res.data.spans;\n          this.spanvalues = res.data.span_values;\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n    linkTexttoLabel(label, category, id) {\n      const sel = rangy.getSelection();\n      const ids = [];\n      for (let r = 0, range, spans; r < sel.rangeCount; ++r) {\n          range = sel.getRangeAt(r);\n          if (range.startContainer == range.endContainer && range.startContainer.nodeType == 3) {\n              range = range.cloneRange();\n              range.selectNode(range.startContainer.parentNode);\n          }\n          spans = range.getNodes([1], function(node) {\n              return node.nodeName.toLowerCase() == \"span\";\n          });\n          for (let i = 0, len = spans.length; i < len; ++i) {\n              ids.push(spans[i].id);\n          }\n      }\n\n      this.spans[category][label] = this.spans[category][label].concat(ids);\n      const path = 'http://' + this.root_api + ':5001/updateSpans';\n      let newspans = this.spans[category][label];\n      \n      axios.post(path, {category, label, newspans, id })\n        .then(() => {\n          this.getnextdocument(this.currentidx);\n        })\n        .catch((error) => {\n          console.error(error);\n      });\n    },\n    changeValue(label, category, id) {\n      console.log(label);\n      const path = 'http://' + this.root_api + ':5001/changelabel';\n      axios.post(path, { label, category, id })\n        .then((res) => {\n          if(res.data.new_value){\n            this.linkTexttoLabel(label, category, id);\n          }\n          else{\n            this.getnextdocument(this.currentidx);\n          }\n        })\n        .catch((error) => {\n          console.error(error);\n        });\n    },\n\n    checkSpanStatus(index) {\n      var span = 'sp_' + index;\n      return this.spanvalues.includes(span)\n    },\n    addlabel: function(id) {\n      var newlabel = $('#'+ id).val();\n      var category = id.split(\"-\")[0];\n      const path = 'http://' + this.root_api + ':5001/addlabel';\n\n      axios.post(path, {category, newlabel})\n        .then(() => {\n          this.getnextdocument(this.currentidx );\n          $('#'+ id).val('');\n        })\n        .catch((error) => {\n          console.error(error);\n        });      \n     },\n  },\n  created() {\n    this.getnextdocument(0);\n\n    EventBus.$on(\"number-added\", newIdx => {\n      this.currentidx = newIdx;\n      this.getnextdocument(newIdx);\n    });\n  },\n};\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\ninput {\n  margin: 3px;\n}\nh3 {\n  margin: 0px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n.category {\n  text-align: left;\n  margin-top: 15px;\n}\n.overflowAuto {\n  overflow-x: hidden;\n  overflow-y: auto;\n  height: calc(100vh - 700px);\n}\n.document {\n  margin: 15px;\n}\n.btn-group {\n  margin: 5px;\n}\ndiv.boxwrap div {\n  float: left;\n}\ndiv.boxwrap div:hover {\n  background-color: aqua;\n  cursor: pointer;\n}\ndiv.boxwrap div h5 {\n  text-align: center;\n}\n</style>\n"]}]}